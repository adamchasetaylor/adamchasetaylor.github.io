{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Python Helper - Studio V2 API.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true,
      "authorship_tag": "ABX9TyOcSLj1HmU2bdu6PNiswdVa",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/adamchasetaylor/adamchasetaylor.github.io/blob/master/Import%20and%20Export%20Studio%20Flows%20in%20V2%20API\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_CcqFsoECzyi",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "pip install twilio"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gFPpLuWzDB56",
        "colab_type": "code",
        "cellView": "form",
        "colab": {}
      },
      "source": [
        "from twilio.rest import Client\n",
        "\n",
        "twilio_sid = '' #@param {type:\"string\"}\n",
        "twilio_auth_token = '' #@param {type:\"string\"}\n",
        "studio_flow = '' #@param {type:\"string\"}"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "oJNPztkUIvtq",
        "colab_type": "text"
      },
      "source": [
        "Fetch A Studio Flow, and Print the JSON Definition"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eS3rAkh8EYua",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import json\n",
        "client = Client(twilio_sid, twilio_auth_token)\n",
        "flow_revision = client.studio.v2.flows(studio_flow).revisions('LatestPublished').fetch()\n",
        "print(\"NAME:\",flow_revision.friendly_name)\n",
        "print(\"REVISION:\",flow_revision.revision)\n",
        "print(flow_revision.definition)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "QAMir0caI7hZ",
        "colab_type": "text"
      },
      "source": [
        "Validate this JSON (Valid JSON according to schema)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "6_7Sh1ZzI_fv",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "flow_validate_good = client.studio.v2.flow_valid.update(\n",
        "  friendly_name='Flow for Validation',\n",
        "  status='draft',\n",
        "  definition=flow_revision.definition\n",
        ")\n",
        "print(flow_validate_good.valid)                     "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "YY0dNANlK5T6",
        "colab_type": "text"
      },
      "source": [
        "Save the JSON as a Draft for New Flow"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SemVbS9gK4YU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "new_flow = client.studio.v2.flows.create(\n",
        "    commit_message='New Draft',\n",
        "    friendly_name='Studio Blacklist New Draft',\n",
        "    status='draft',\n",
        "    definition=flow_revision.definition\n",
        ")\n",
        "\n",
        "print(new_flow.sid)"
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}